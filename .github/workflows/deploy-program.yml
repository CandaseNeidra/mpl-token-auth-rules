name: Deploy Program

on:
  workflow_dispatch:
    inputs:
      program:
        description: Program
        required: true
        default: token-auth-rules
        type: choice
        options:
          - token-auth-rules
      cluster:
        description: Cluster environment
        required: true
        default: devnet
        type: choice
        options:
          - devnet
          - mainnet-beta
      publish_crate:
        description: Release cargo crate
        required: true
        type: boolean
        default: false
      bump:
        description: Version bump
        required: true
        default: patch
        type: choice
        options:
          - patch
          - minor
          - major

env:
  CACHE: true

jobs:
  build_programs:
    name: Programs
    uses: ./.github/workflows/build-programs.yml
    secrets: inherit

  test_js:
    name: JS client
    needs: build_programs
    uses: ./.github/workflows/test-js.yml
    secrets: inherit

  deploy_program:
    name: Program / Deploy
    runs-on: ubuntu-latest
    needs: test_js
    permissions:
      contents: write
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Load environment variables
        run: cat .github/.env >> $GITHUB_ENV

      - name: Install Rust
        uses: metaplex-foundation/actions/install-rust@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Install Solana
        uses: metaplex-foundation/actions/install-solana@v1
        with:
          version: ${{ env.SOLANA_VERSION }}
          cache: ${{ env.CACHE }}

      - name: Install cargo-release
        uses: metaplex-foundation/actions/install-cargo-release@v1
        if: github.event.inputs.publish_crate == 'true'
        with:
          cache: ${{ env.CACHE }}

      - name: Set RPC
        run: |
          if [ "${{ inputs.cluster }}" == "devnet" ]; then
            echo RPC=${{ secrets.DEVNET_RPC }} >> $GITHUB_ENV
          else
            echo RPC=${{ secrets.MAINNET_RPC }} >> $GITHUB_ENV
          fi

      - name: Download program builds
        uses: actions/download-artifact@v3
        with:
          name: program-builds

      - name: Deploy Program
        run: |
          echo "Deploying ${{ inputs.program }} to ${{ inputs.cluster }}"

          echo ${{ secrets.TOKEN_AUTH_RULES_DEPLOY_KEY }} > ./deploy-key.json

          solana -v program deploy ./programs/${{ inputs.program }}/target/deploy/mpl_token_auth_rules.so \
            -u ${{ env.RPC }} \
            --program-id auth9SigNpDKz4sJJ1DfCTuZrZNSAgh9sFD3rboVmgg \
            -k ./deploy-key.json

      - name: Publish crate
        working-directory: ./programs/${{ inputs.program }}/program
        if: github.event.inputs.publish_crate == 'true' && github.event.inputs.cluster == 'mainnet-beta'
        run: |
          git config user.name "${{ env.COMMIT_USER_NAME }}"
          git config user.email "${{ env.COMMIT_USER_EMAIL }}"

          cargo login ${{ secrets.CRATES_TOKEN }}
          cargo release ${{ inputs.bump }} --execute
